core: {
    loguru_verbosity: 3
    hidpi: false
    debug_with_profiler: true //makes the profiler print when it starts and stops time
}

train: {
    dataset_name: "shapenet" //semantickitti, shapenet, toyexample
    with_viewer: false 
    with_visdom: false 
    lr: 0.001 
    weight_decay: 3e-4 
    save_checkpoint: false
    checkpoint_path: ""
}

model: {
    positions_mode: "xyz"
    values_mode: "none"
    pointnet_layers: [16,32,64]
    pointnet_start_nr_channels: 32
    nr_downsamples: 3
    nr_blocks_down_stage: [4,4,4]
    nr_blocks_bottleneck: 3
    nr_blocks_up_stage: [2,2,2]
    nr_levels_down_with_normal_resnet: 3
    nr_levels_up_with_normal_resnet: 2
    compression_factor: 1.0
    dropout_last_layer: 0.0

    //we run some experiments by setting the string here which if it's none then we run with the default full model:
    // none - default model with full features
    // slice_no_deform - doesn't use delta weights for the slicing, by setting them to zero
    // pointnet_no_elevate - doesn't elevate the distributed points into a higher dimensional space before doing the max but still substracts the local mean
    // pointnet_no_local_mean - doesn't perform the local mean substraction of the xyz positions and just uses them as is
    // pointnet_no_elevate_no_local_mean - doesnt elevate and doesnt do local mean
    // splat - just does a mean of all the features that fall into the lattice vertex without any elevatation or mean substraction
    // attention_pool - does an attention based pooling for pointnet instead of the maxpool
    experiment: "none" 
}

lattice_gpu: {
    hash_table_capacity: 60000 //good for shapenet which splat at around 1k for sigma 0.03 
    nr_sigmas: 1

    // sigma_0: "0.06 3"  //for bag IMPORTANT: if you change this, change it also int he lnn_eval.cfg
    sigma_0: "0.05 3"  //for motorbike IMPORTANT: if you change this, change it also int he lnn_eval.cfg
    // sigma_0: "0.03 3"  //for knife IMPORTANT: if you change this, change it also int he lnn_eval.cfg
    // sigma_0: "0.01 2"  // IMPORTANT: if you change this, change it also int he lnn_eval.cfg
    // sigma_0: "0.055 3"  //for table IMPORTANT: if you change this, change it also int he lnn_eval.cfg
    // sigma_0: "0.04 3"  //for rocket IMPORTANT: if you change this, change it also int he lnn_eval.cfg
    // sigma_0: "0.06 3"  //for cap IMPORTANT: if you change this, change it also int he lnn_eval.cfg
    // sigma_0: "0.06 3"  //for car IMPORTANT: if you change this, change it also int he lnn_eval.cfg
    //finer lattice 
    // sigma_0: "0.04 3"  //for car IMPORTANT: if you change this, change it also int he lnn_eval.cfg

}


loader_shapenet_partseg: {
    dataset_path: "/media/rosu/Data/data/shapenet_part_seg/shapenet_part_seg/shapenetcore_partanno_segmentation_benchmark_v0"
    // dataset_path: "/home/local/staff/rosu/data/shapenet_part_seg/shapenet_part_seg/shapenetcore_partanno_segmentation_benchmark_v0"
    autostart: false
    mode: "train" // train, test, val
    restrict_to_object: "motorbike" // you can leave it empty to get all of them or write any of (airplane, bag, cap, car, chair, earphone, guitar, knife, lamp, laptop, motorbike, mug, pistol, rocket, skateboard, table)
    shuffle_points: true
    normalize: false // normalize the point cloud between [-1 and 1]
    shuffle: true
    // do_overfit: true //return only one of the samples the whole time, concretely the first sample in the dataset
    do_overfit: false //return only one of the samples the whole time, concretely the first sample in the dataset

    // one used for actual augmentation
    transformer: {
        random_translation_xyz_magnitude: [0.2, 0.0, 0.2]
        rotation_x_max_angle: 0.0
        rotation_y_max_angle: 0.0
        rotation_z_max_angle: 0.0
        // random_stretch_xyz_magnitude: 0.2
        random_stretch_xyz_magnitude: [0.0, 0.0, 0.0]
        adaptive_subsampling_falloff_start: 0.0
        adaptive_subsampling_falloff_end: 0.0
        // random_subsample_percentage: 0.998 //randomly removed x percent of the pointcloud
        random_subsample_percentage: 0.0 //randomly removed x percent of the pointcloud
        random_mirror_x: false
        random_mirror_y: false
        random_mirror_z: true
        random_rotation_90_degrees_y: false
        hsv_jitter: [0,0,0]
        chance_of_xyz_noise: 0.5
        xyz_noise_stddev: [0.001, 0.001, 0.001]
    }
}



visualization: {
    show_gui: true

    subsample_factor: 1
    enable_culling: true

    cam: {
        fov: 60 //can be a float value (fov: 30.0) or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
        near: 0.3 //can be a float value (near: 0.01) or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
        far: "auto" //can be a float value (far: 10,0) or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
        exposure: 1.0 //can be floar or "auto"
    }

    ssao: {
        enable_ssao: false
        ao_downsample: 0
        kernel_radius: "auto" //can be a float value (kernel_radius: 10,0) or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
        ao_power: 4
        ao_blur_sigma_spacial: 2.0
        ao_blur_sigma_depth: 0.0001
    }

    edl: {
        auto_settings: true
        enable_edl_lighting: true
        edl_strength: 8.0
    }

    background:{
        show_background_img: false
        background_img_path: ""
    }

    ibl: {
        enable_ibl: false
        show_environment_map: false
        // environment_map_path: "/media/rosu/Data/data/sibl/Desert_Highway/Road_to_MonumentValley_Ref.hdr"
        // environment_map_path: "/media/rosu/Data/data/sibl/Footprint_Court/Footprint_Court_2k.hdr"
        // environment_map_path: "/media/rosu/Data/data/sibl/Circus_Backstage/Circus_Backstage_3k.hdr"
        // environment_map_path: "/media/rosu/Data/data/sibl/canary_wharf_4k.hdr"
        environment_map_path: "sibl/Barcelona_Rooftops/Barce_Rooftop_C_3k.hdr"
        // environment_cubemap_resolution: 2048
        environment_cubemap_resolution: 512
        irradiance_cubemap_resolution: 32
        prefilter_cubemap_resolution: 128
        brdf_lut_resolution: 512
    }

    lights:{
        nr_spot_lights: 0
        spot_light_0: {
            power: "auto" //can be a float value (power: 1.0) or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
            color: "auto" //can be a vector of rgb [1.0, 1.0, 0.5] or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
            create_shadow: true
            shadow_map_resolution: 2048
        }
        spot_light_1: {
            power: "auto" //can be a float value (power: 1.0) or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
            color: "auto" //can be a vector of rgb [1.0, 1.0, 0.5] or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
            create_shadow: true
            shadow_map_resolution: 1024
        }
        spot_light_2: {
            power: "auto"  //can be a float value (power: 1.0) or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
            color: "auto" //can be a vector of rgb [1.0, 1.0, 0.5] or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
            create_shadow: true
            shadow_map_resolution: 1024
        }
    }

}
