core: {
    loguru_verbosity: 3
    hidpi: false
    debug_with_profiler: true //makes the profiler print when it starts and stops time
}

eval: {
    dataset_name: "cloud_ros" //semantickitti, shapenet, cloud_ros
    with_viewer: true
    // checkpoint_path: "/media/rosu/Data/data/semantic_kitti/saved_models/home_comp_sigma_06/model_e_2_0.5351074128516075.pt"
    checkpoint_path: "/media/rosu/Data/data/semantic_kitti/saved_models/home_comp_sigma_06_dropout_finale/model_e_2_0.5341928188691084.pt" //seems a bit more stable
    do_write_predictions: false
    output_predictions_path: "/media/rosu/Data/data/drz/latticenet_predictions/bag_mbzirc8_2020-09-30-17-52-35/home_comp_sigma_06"
}



model: {
    positions_mode: "xyz"
    values_mode: "none"
    pointnet_layers: [16,32,64]
    pointnet_start_nr_channels: 64
    nr_downsamples: 3
    nr_blocks_down_stage: [2,2,2]
    nr_blocks_bottleneck: 3
    nr_blocks_up_stage: [1,2,2]
    nr_levels_down_with_normal_resnet: 3
    nr_levels_up_with_normal_resnet: 3
    compression_factor: 1.0
    dropout_last_layer: 0.0

    //we run some experiments by setting the string here which if it's none then we run with the default full model:
    // none - default model with full features
    // slice_no_deform - doesn't use delta weights for the slicing, by setting them to zero
    // pointnet_no_elevate - doesn't elevate the distributed points into a higher dimensional space before doing the max but still substracts the local mean
    // pointnet_no_local_mean - doesn't perform the local mean substraction of the xyz positions and just uses them as is
    // pointnet_no_elevate_no_local_mean - doesnt elevate and doesnt do local mean
    // splat - just does a mean of all the features that fall into the lattice vertex without any elevatation or mean substraction
    // attention_pool - does an attention based pooling for pointnet instead of the maxpool
    experiment: "none" 
}



lattice_gpu: {
    hash_table_capacity: 100000 //good for smenaitc kitti which splat around 10k with sigma of 1
    nr_sigmas: 1

    sigma_0: "0.6 3" //sigma of X affecting Y dimensions of the positions vector
}

ros_bag: {
    bag_path: "/media/rosu/HDD/data/drz/bags/bag_mbzirc8_2020-09-30-17-52-35.bag"
    // bag_path: "/media/rosu/HDD/data/drz/bags/bag_mbzirc8_2020-11-11-16-14-51.bag"
    bag_args: "-r 1.0"

}
loader_cloud_ros: {
    cloud_topic: "/os_cloud_node/points"
    min_dist_filter: 0
    do_pose: false 
    pose_file: "/media/rosu/Data/data/drz/semantic_poses/last_reg_pose_bag_mbzirc8_2020-09-30-17-52-35.txt"
    // pose_file: "/media/rosu/Data/data/drz/semantic_poses/gps_poses_bag_mbzirc8_2020-09-30-17-52-35.txt"
    pose_file_format: "tum"

    transformer: {
        random_translation_xyz_magnitude: 0.0
        random_translation_xz_magnitude: 0.0
        rotation_y_max_angle: 0.0
        random_stretch_xyz_magnitude: 0.0
        adaptive_subsampling_falloff_start: 0.0
        // adaptive_subsampling_falloff_end: 50.0
        // random_subsample_percentage: 0.3 //randomly removed x percent of the pointcloud
        adaptive_subsampling_falloff_end: 0.0
        random_subsample_percentage: 0.0 //randomly removed x percent of the pointcloud
        random_mirror_x: false
        random_mirror_z: false
        random_rotation_90_degrees_y: false

        hsv_jitter:[0,0,0]

        chance_of_xyz_noise: 0.0
        xyz_noise_stddev: [0.0, 0.0, 0.0]
    }

}


visualization: {
    show_gui: true

    subsample_factor: 1
    enable_culling: true

    cam: {
        fov: 60 //can be a float value (fov: 30.0) or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
        near: 0.3 //can be a float value (near: 0.01) or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
        far: "auto" //can be a float value (far: 10,0) or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
        exposure: 1.0 //can be floar or "auto"
    }

    ssao: {
        enable_ssao: false
        ao_downsample: 0
        kernel_radius: "auto" //can be a float value (kernel_radius: 10,0) or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
        ao_power: 4
        ao_blur_sigma_spacial: 2.0
        ao_blur_sigma_depth: 0.0001
    }

    edl: {
        auto_settings: true
        enable_edl_lighting: true
        edl_strength: 8.0
    }

    background:{
        show_background_img: false
        background_img_path: ""
    }

    ibl: {
        enable_ibl: false
        show_environment_map: false
        // environment_map_path: "/media/rosu/Data/data/sibl/Desert_Highway/Road_to_MonumentValley_Ref.hdr"
        // environment_map_path: "/media/rosu/Data/data/sibl/Footprint_Court/Footprint_Court_2k.hdr"
        // environment_map_path: "/media/rosu/Data/data/sibl/Circus_Backstage/Circus_Backstage_3k.hdr"
        // environment_map_path: "/media/rosu/Data/data/sibl/canary_wharf_4k.hdr"
        environment_map_path: "sibl/Barcelona_Rooftops/Barce_Rooftop_C_3k.hdr"
        // environment_cubemap_resolution: 2048
        environment_cubemap_resolution: 512
        irradiance_cubemap_resolution: 32
        prefilter_cubemap_resolution: 128
        brdf_lut_resolution: 512
    }

    lights:{
        nr_spot_lights: 0
        spot_light_0: {
            power: "auto" //can be a float value (power: 1.0) or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
            color: "auto" //can be a vector of rgb [1.0, 1.0, 0.5] or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
            create_shadow: true
            shadow_map_resolution: 2048
        }
        spot_light_1: {
            power: "auto" //can be a float value (power: 1.0) or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
            color: "auto" //can be a vector of rgb [1.0, 1.0, 0.5] or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
            create_shadow: true
            shadow_map_resolution: 1024
        }
        spot_light_2: {
            power: "auto"  //can be a float value (power: 1.0) or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
            color: "auto" //can be a vector of rgb [1.0, 1.0, 0.5] or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
            create_shadow: true
            shadow_map_resolution: 1024
        }
    }

}
